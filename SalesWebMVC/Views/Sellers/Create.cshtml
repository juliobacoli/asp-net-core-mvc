@* Declaração mostrando que a view tem a disposição dela um objeto SellerViewModel *@
@model SalesWebMVC.Models.ViewModels.SellerFormViewModel

@{
    ViewData["Title"] = "Create";
}

<h2> @ViewData["Title"] </h2>

<h4> Seller </h4>
<hr />

<div class="row"> @*Esse class row vai garantir que a div ocupe todo a largura da tela*@
    <div class="col-md-4"> @*O bootstrap divide a tela em 12 partes, quando vc coloca 4, eu uso 1/3 da tela. Do mesmo modo se colocar 6, vai usar metade da tela (6/12).*@
        <form asp-action="Create">
            <div class="form-group">
                <label asp-for="Seller.Name" class="control-label">  </label>
                <input asp-for="Seller.Name" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Seller.Email" class="control-label">  </label>
                <input asp-for="Seller.Email" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Seller.BirthDate" class="control-label">  </label>
                <input asp-for="Seller.BirthDate" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Seller.BaseSalary" class="control-label">  </label>
                <input asp-for="Seller.BaseSalary" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="Seller.DepartmentId" class="control-label"></label>
                <select asp-for="Seller.DepartmentId" asp-items="@(new SelectList(Model.Departments,"Id", "Name"))" class="form-control"></select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>